name: Deploy to Firebase Hosting on Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Lint code
        run: npm run lint --if-present
        
      - name: Debug GitHub Secrets
        run: |
          echo "🔍 Debugging GitHub Secrets availability..."
          echo "FIREBASE_API_KEY length: ${#FIREBASE_API_KEY}"
          echo "FIREBASE_AUTH_DOMAIN length: ${#FIREBASE_AUTH_DOMAIN}"
          echo "FIREBASE_PROJECT_ID length: ${#FIREBASE_PROJECT_ID}"
          echo "FIREBASE_STORAGE_BUCKET length: ${#FIREBASE_STORAGE_BUCKET}"
          echo "FIREBASE_MESSAGING_SENDER_ID length: ${#FIREBASE_MESSAGING_SENDER_ID}"
          echo "FIREBASE_APP_ID length: ${#FIREBASE_APP_ID}"
          echo "FIREBASE_MEASUREMENT_ID length: ${#FIREBASE_MEASUREMENT_ID}"
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Create .env.production file
        run: |
          echo "🔧 Creating .env.production file..."
          cat > .env.production <<EOL
          NODE_ENV=production
          EXPO_PUBLIC_CUSTOM_DOMAIN=chronicleweaver.com
          EXPO_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}
          EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
          EXPO_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
          EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
          EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          EXPO_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}
          EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}
          EOL
          echo "✅ .env.production file created"

      - name: Verify .env.production
        run: |
          echo "🔍 Verifying .env.production file contents..."
          if [ -f .env.production ]; then
            echo "✅ .env.production file exists"
            echo "📄 File contents:"
            cat .env.production
            echo ""
            echo "📊 File size: $(wc -c < .env.production) bytes"
            echo "📊 Line count: $(wc -l < .env.production) lines"
          else
            echo "❌ .env.production file not found!"
            exit 1
          fi

      - name: Debug Environment Variables Before Build
        run: |
          echo "🔍 Environment variables before build:"
          echo "NODE_ENV: $NODE_ENV"
          echo "EXPO_PUBLIC_FIREBASE_API_KEY length: ${#EXPO_PUBLIC_FIREBASE_API_KEY}"
          echo "EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: $EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN"
          echo "EXPO_PUBLIC_FIREBASE_PROJECT_ID: $EXPO_PUBLIC_FIREBASE_PROJECT_ID"
          echo "EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: $EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET"
          echo "EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: $EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID"
          echo "EXPO_PUBLIC_FIREBASE_APP_ID length: ${#EXPO_PUBLIC_FIREBASE_APP_ID}"
          echo "EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID: $EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID"
          echo ""
          echo "🔍 All environment variables containing 'FIREBASE':"
          env | grep FIREBASE || echo "No FIREBASE variables found"
        env:
          NODE_ENV: production
          EXPO_PUBLIC_CUSTOM_DOMAIN: chronicleweaver.com
          EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          EXPO_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Build project
        run: |
          echo "🚀 Starting build process..."
          echo "📂 Current directory: $(pwd)"
          echo "📄 Files in current directory:"
          ls -la
          echo ""
          echo "🔍 Checking for .env files:"
          ls -la .env* || echo "No .env files found"
          echo ""
          echo "🔧 Loading .env.production if it exists..."
          if [ -f .env.production ]; then
            echo "✅ Loading .env.production"
            set -a
            source .env.production
            set +a
          else
            echo "⚠️ .env.production not found, using environment variables only"
          fi
          echo ""
          echo "🔍 Final environment check before expo export:"
          echo "EXPO_PUBLIC_FIREBASE_API_KEY: ${EXPO_PUBLIC_FIREBASE_API_KEY:0:10}..."
          echo "EXPO_PUBLIC_FIREBASE_PROJECT_ID: $EXPO_PUBLIC_FIREBASE_PROJECT_ID"
          echo ""
          echo "🏗️ Running expo export..."
          npx expo export --platform web --output-dir dist --verbose
        env:
          NODE_ENV: production
          EXPO_PUBLIC_CUSTOM_DOMAIN: chronicleweaver.com
          EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          EXPO_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Post-build optimization
        run: node scripts/post-build.js
          
      - name: Deploy to Firebase Hosting (Preview)
        if: github.event_name == 'pull_request'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CHRONICLE_WEAVER_460713 }}'
          projectId: chronicle-weaver-460713
          
      - name: Deploy to Firebase Hosting (Live)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CHRONICLE_WEAVER_460713 }}'
          channelId: live
          projectId: chronicle-weaver-460713
